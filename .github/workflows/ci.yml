name: docker release

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  dockerhub-buildx:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: newfuture/ddns
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REGISTRY: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Prepare arguments
        id: prepare
        run: |
          DOCKER_TAGS="--tag ${DOCKER_REPO}:latest"
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            DOCKER_TAGS="${DOCKER_TAGS} --tag ${DOCKER_REPO}:${GITHUB_REF#refs/tags/}"
          fi
          echo ::set-output name=buildx_args:: --output "type=image,push=true" --platform ${{ steps.buildx.outputs.platforms }} ${DOCKER_TAGS} .
      - name: Docker login
        run: |
          echo "${DOCKER_PASSWORD}" | docker "${DOCKER_REGISTRY}"  \
            --username "${DOCKER_USERNAME}" \
            --password-stdin
      - name: Run buildx and push
        if: success()
        run: docker buildx build ${{ steps.prepare.outputs.buildx_args }}
      - name: Docker Hub logout
        if: always()
        run: docker logout


  githubdocker-buildx:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: newfuture/ddns/ddns
      DOCKER_USERNAME: ${{ github.actor }}
      DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_REGISTRY: login docker.pkg.github.com
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Prepare arguments
        id: prepare
        run: |
          DOCKER_TAGS="--tag ${DOCKER_REPO}:latest"
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            DOCKER_TAGS="${DOCKER_TAGS} --tag ${DOCKER_REPO}:${GITHUB_REF#refs/tags/}"
          fi
          echo ::set-output name=buildx_args:: --output "type=image,push=true" --platform ${{ steps.buildx.outputs.platforms }} ${DOCKER_TAGS} .
      - name: Docker login
        run: |
          echo "${DOCKER_PASSWORD}" | docker "${DOCKER_REGISTRY}" \
            --username "${DOCKER_USERNAME}" \
            --password-stdin
      - name: Run buildx and push
        if: success()
        run: docker buildx build ${{ steps.prepare.outputs.buildx_args }}
      - name: Docker Hub logout
        if: always()
        run: docker logout
